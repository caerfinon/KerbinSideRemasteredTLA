// -----------------------------------------------------------------
//	CONTRACT:  KSRTLA-Salvage3 - Deepsea Salvage - Deepsea Salvage - Rescue/Recover Large Wreck
//	Author: Caerfinon 
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRTLA-SLVG-03
	name = KSRTLA-Salvage3
	title =  Recover Large Sunken Aircraft
	genericTitle =  Recover Large Sunken Aircraft
	group = Deepsea Salvage
	agent = Deepsea Salvage

	description = Steve Zissou Kerman of DeepSea Salvage needs our help. There has been a plane crash in @/crashBiome.FullName()! The pilot last reported they had suffered @/crashReason and had to put down in the water. He indicated they were sinking and then we lost contact. Send a rescue and recovery mission to the crash site to recover the survivors and salvage what you can.
	genericDescription =  A plane has crashed in the ocean and is sinking. Rescure the surviors and salvage what you can
	synopsis = Steve Zissou Kerman of DeepSea Salvage needs our help with a rescue mission involving underwater recovery.  
	notes = This mission requires that you rescue Kerbals from a crashed aircraft and return the survivors to a seaport recovery loaction. There are optional salvage tasks. Recovered salvage is verified on return to port.
	completedMessage =  Fantastic! You have recovered the survivors from certain death in the crash at @/crashBiome.FullName(). &br;&br;Thanks!&br;-SZK 

//Contract Limits
	maxCompletions = 0 
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Exceptional
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = 40000 * Random(1.0, 1.15)
	rewardReputation = 6
	rewardScience = 0.0

//Contract Penalties
	failureFunds = @/rewardFunds * Random(1.0, 1.15)
	failureReputation = 30.0
	

// REQUIREMENTS FOR CONTRACT TO APPEAR

// requires MK3 passenger
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = mk3CrewCabin
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = KSRTLA-Salvage2
		minCount = 1
	}

// wait 14 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 14 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRTLA-Salvage3
		cooldownDuration = 14d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		type = string
		craft = KSRTLASalvage3
	}

	
	DATA
	{
		type = Waypoint
		hidden = true
		crashWaypoint = @/CrashWaypointGenerator.Waypoints().ElementAt(0)
	}

	DATA
	{
		type = Location
		hidden = true
		crashLocation = @/crashWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		crashBiome = @/crashLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		crashReasons = ["instrument failure","engine fire","structural damage","bird strikes","loss of power","depressurization"]
	}
	
	DATA
	{
		type = String
		hidden = true
		crashReason = @/crashReasons.Random()
	}
	
//Passenger Data

	DATA
	{
		type = List<Kerbal>
		kerbalsInDistress = [NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen") ]
		hidden = true
	}	


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine Crash zone
	BEHAVIOUR
	{
        name = CrashWaypointGenerator
        type = WaypointGenerator
        // index = 0
		RANDOM_WAYPOINT
		{
			name = Crash Site
			targetBody = Kerbin
			icon = ContractPacks/KerbinSideRemasteredTLA/Assets/Icons/salvage
			waterAllowed = true
			underwater = true 
			altitude = -0.1
		}
        // KSC Shores index = 1
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(0)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(0)
			longitude = @KSRTLA:HarbourLON.ElementAt(0)
		}
        // Kola Island index = 2
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(1)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(1)
			longitude = @KSRTLA:HarbourLON.ElementAt(1)
		}
        // Sandy Island index = 3
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(2)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(2)
			longitude = @KSRTLA:HarbourLON.ElementAt(2)
		}
		// Meeda index = 4
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(3)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(3)
			longitude = @KSRTLA:HarbourLON.ElementAt(3)
		}
		// Hazard ShallowsHazard Shallows index = 5
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(4)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(4)
			longitude = @KSRTLA:HarbourLON.ElementAt(4)
		}
		// Dusty Island index = 6
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(5)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(5)
			longitude = @KSRTLA:HarbourLON.ElementAt(5)
		}
		// Akita Bay index = 7
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(6)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(6)
			longitude = @KSRTLA:HarbourLON.ElementAt(6)
		}
		// Arcachon index = 8
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(7)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(7)
			longitude = @KSRTLA:HarbourLON.ElementAt(7)
		}
		// Cadenza index = 9
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(8)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(8)
			longitude = @KSRTLA:HarbourLON.ElementAt(8)
		}
		// Pinamar index = 10
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(9)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(9)
			longitude = @KSRTLA:HarbourLON.ElementAt(9)
		}
		// Port Halsey Island index = 11
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(10)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(10)
			longitude = @KSRTLA:HarbourLON.ElementAt(10)
		}
		// River Mouth index = 12
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(11)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(11)
			longitude = @KSRTLA:HarbourLON.ElementAt(11)
		}
		// Sabratha index = 13
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(12)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(12)
			longitude = @KSRTLA:HarbourLON.ElementAt(12)
		}
		// Vanissius' Bay index = 14
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(13)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(13)
			longitude = @KSRTLA:HarbourLON.ElementAt(13)
		}
		// Viridia Island index = 15
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(14)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(14)
			longitude = @KSRTLA:HarbourLON.ElementAt(14)
		}
		// Zhbishlina Island index = 16
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(15)
			targetBody = @/targetBody
			hidden = true
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(15)
			longitude = @KSRTLA:HarbourLON.ElementAt(15)
		}

	}
//Set the missing plane at the Waypoint
	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{

			// Neutral Boyancy ships now spawn 30 meters below sea level 
			name = Missing Aircraft
			craftURL = ContractPacks/KerbinSideRemasteredTLA/Assets/Ships/LargeWreck.craft
			flagURL = ContractPacks/KerbinSideRemasteredTLA/Assets/Flags/KSCAirlines
			vesselType = Ship
			owned = false
			targetBody = Kerbin
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			alt = -30
			heading = Random(0,359)
			
		}
	}

	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}
	
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(2)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(3)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			alt = 0
			heading = Random(0,359)
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(4)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(5)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(6)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(7)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)  
			alt = 0
			heading = Random(0,359)
			
		}
	}

//Remove the missing plane when the contract completes
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = Missing Aircraft
	}

//Remove the survivors when the contract completes
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalsInDistress
	}

// Mission Dialog boxes
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = CONTRACT_ACCEPTED
			position = CENTER
			
			TEXT
			{
				text = <b>Recover Sunken Aircraft:</b> &br;&br; Excellent! I'm glad you guys are working with us. I really hope it's a success. Nobody knows what's going to happen. And then we film it. That's the whole concept.  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ1
				characterName = Steve Zissou Kerman
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RecoveryReady
			position = CENTER
			
			TEXT
			{
				text = This is outstanding work! You've secured the survivors safely. I knew you could do it. Now bring them home to port... and if you happen to have any salvage, bring that too.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ1
				characterName = Steve Zissou Kerman
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = ReturnToPort
			
			position = CENTER
			
			TEXT
			{
				text = Excellent! You have saved the day. Remind me to send you all a red cap and a Speedo. Drop anchor and let's see what you've recovered
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ2
				characterName = Steve Zissou Kerman
			}
			
		}
		
		
// failed misssion dialog
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = So the mission... that's a set back. Yeah. Then how am I gonna finish my movie then?
				fontSize = 20
				textColor = #B00B1E
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ3
				characterName = Steve Zissou Kerman
			}
		}
	}

// -----------------------------------------------------------------	
// RecoveryReady
// -----------------------------------------------------------------
	PARAMETER
	{
		name = RecoveryReady
		type = VesselParameterGroup
		define = @/craft
        dissassociateVesselsOnContractCompletion = true
		title = Rescue the survivors at the crash site with your recovery vessel.
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = all survivors are on board
			hideChildren = true
			completeInSequence = true
			kerbal = @/kerbalsInDistress
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = vessel is stopped on the surface 
			situation = SPLASHED
			maxSpeed = 5
			minAltitude = -5
			disableOnStateChange = false
			hideChildren = true
			completeInSequence = true
		}
	}
// -----------------------------------------------------------------	
// Return to port
// -----------------------------------------------------------------

	PARAMETER
	{
		name = ReturnToPort
		type = VesselParameterGroup
		vessel = @/craft
		title = Return survivors to port
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true

		PARAMETER
		{
			name = Any
			type = Any 
			title = return to any harbour 
			disableOnStateChange = true
			hideChildren = true
			
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 1
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 2
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 3
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 4
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 5
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 6
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 7
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 8
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 9
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 10
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 11
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 12
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 13
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 14
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 15
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 16
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				hideChildren = true
			}
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your vessel on the surface
			situation = SPLASHED
			maxSpeed = 5
			minAltitude = -5
			disableOnStateChange = false
			hideChildren = true
			completeInSequence = true
		}
	}

// -----------------------------------------------------------------
// Safety first
// -----------------------------------------------------------------
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		vessel = @/craft

	    PARAMETER
	    {
		    name = KerbalDeaths
		    type = KerbalDeaths
		    title = Without killing anyone 
		    vessel = @/craft
		    hideChildren = true
		    completeInSequence = true
	    }
    }
// -----------------------------------------------------------------
//Recovery Parameter - Recover Kerbals
// -----------------------------------------------------------------
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		title = and recover all survivors
		kerbal =  @/kerbalsInDistress.ElementAt(0)
		kerbal =  @/kerbalsInDistress.ElementAt(1)
		kerbal =  @/kerbalsInDistress.ElementAt(2)
		kerbal =  @/kerbalsInDistress.ElementAt(3)
		kerbal =  @/kerbalsInDistress.ElementAt(4)
		kerbal =  @/kerbalsInDistress.ElementAt(5)
		kerbal =  @/kerbalsInDistress.ElementAt(6)
		kerbal =  @/kerbalsInDistress.ElementAt(7)
		hideChildren = true
		completeInSequence = true
	}
	
// -----------------------------------------------------------------
// Optional Parameters
// -----------------------------------------------------------------
	PARAMETER
	{
		name = Salvage The Wreck
		type = All
		title = Salvage The Wreck (Optional) 
		notes = Salvage: To recover the wreck you need to dock/attach it to your recovery vessel.
		rewardReputation = 3.0
		rewardFunds = 30000.0
		optional = true		
		disableOnStateChange = true
		hideChildren = true
		completedMessage = Well done you! Having the actual wreckage from the craft may help us find out what went wrong.

		PARAMETER
		{
			name = VerifySalvage
			type = Duration
			duration = 5s
			preWaitText = Verify Salvage at Port:
			waitingText = Verifying Salvage: 
			completionText = Salvage check completed
			completeInSequence = true
			disableOnStateChange = true
			startCriteria = PARAMETER_COMPLETION
			parameter = ReturnToPort
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = Mark1Cockpit_wreck
			maxCount = 1
			disableOnStateChange = false
			completeInSequence = true
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = MK1CrewCabin_wreck
			maxCount = 1
			disableOnStateChange = false
			completeInSequence = true
		}
	}


	PARAMETER
	{
		name = Retrieve the Black Box
		type = All
		title = Retrieve the Black Box (optional)
		notes = Salvage: The black box cannot be detected in inventory. It must be attached to the recovery vessel.
		rewardScience = 6
		rewardFunds = 2500.0
		optional = true		
		disableOnStateChange = true
		hideChildren = true
		completedMessage = Well done you! Retrieving the Flight Data Recorder from the craft may help us find out what caused the crash.
		
		PARAMETER
		{
			name = VerifySalvage
			type = Duration
			duration = 5s
			preWaitText = Verify Black Box at Port:
			waitingText = Verifying Black Box: 
			completionText = Black Box check completed
			completeInSequence = true
			disableOnStateChange = true
			startCriteria = PARAMETER_COMPLETION
			parameter = ReturnToPort
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = TheBlackBox
			maxCount = 1
			disableOnStateChange = false
			completeInSequence = true
		}
	}
}
