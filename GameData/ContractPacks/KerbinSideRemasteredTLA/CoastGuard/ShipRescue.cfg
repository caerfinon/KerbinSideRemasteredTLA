// -----------------------------------------------------------------
//	CONTRACT:  KSRTLA-CG-ShipRescue - United Knations Coast Guard - United Knations Coast Guard- Rescue/Recover Ship at sea 
//	Author: Caerfinon 
//	Credits
//	{
//	 Content = TranceaddicT's original mission: "CoastGuard-RescueFishermen" from fork of "Contract Pack: Giving Aircraft a Purpose (GAP)" - https://github.com/7ranceaddic7/GAP License: MIT
//		- original craft files for wrecks, code, and orignal mission outline.
//	{
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRTLA-CG-01
	name = KSRTLA-CG-ShipRescue
	title = Rescue the @/wreck near @KSRTLA:HarbourFullName.ElementAt(@/harbourSelected)
	genericTitle = Rescue a Ship at Sea
	group = United Knations Coast Guard
	agent = United Knations Coast Guard

	description = The Coast Guard reports that the ship @/wreck has run into trouble at sea near @KSRTLA:HarbourFullName.ElementAt(@/harbourSelected) in @/crashBiome.FullName()! The crew last reported @/crashReason and they had to abandon ship. Send a recovery vessel to the last known location and rescue the crew. @/ObserverKerbal1 will be joining you as the Coast Guard observer on the mission.
	genericDescription =  A ship is in trouble in the ocean. Rescure the crew from the wreck.
	synopsis = The United Knations Coast Guard needs our help with a rescue mission involving a disabled ship at sea.    
	completedMessage =  The United Knations Coast Guard thanks you for your help in the recue operation for @/wreck in @/crashBiome.FullName(). 

//Contract Limits
	maxCompletions = 0 
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = 40000 * Random(1.0, 1.15)
	rewardReputation = 1.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds = @/rewardFunds * Random(1.0, 1.15)
	failureReputation = 3.0
	

// REQUIREMENTS FOR CONTRACT TO APPEAR

// requires MK3 passenger

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = KSRTLA-DiveTest
		minCount = 1
	}

// wait 30 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 7 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType =  KSRTLA-CG-ShipRescue
		cooldownDuration = 7d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		type = String
		craft = "KSRTLA-CG-RescueShip"
		hidden = true
	}

//Random Distress Ship Name (Based on Kerbal name generator, cool idea huh?) - TranceaddicT 
	DATA
	{
		type = string
	
		wreck = "S.S. " + RandomKerbalName(Female).FirstWord()
		
		hidden = true
	
	}
	
//Distress Ship Craft List -TranceaddicT
	DATA
	{
		type = List<string>
		
		wreckList = [ "Bayou Fishing Boat disabled.craft" , "DaySailer disabled.craft" , "Pontoon disabled.craft" , "Powerboat disabled.craft" ]
	}
	
//Select a Random Distress Ship Craft to Use -TranceaddicT
	DATA
	{
		type = string
		
		wreckCraft = @/wreckList.Random()
		
		hidden = true
	
	}
	
//Random Capsize Decision -TranceaddicT
	DATA
	{
		type = int
		
		capsizeValue = 180
	}

	DATA
	{
		type = Waypoint
		hidden = true
		crashWaypoint = @/CrashWaypointGenerator.Waypoints().ElementAt(1)
	}

	DATA
	{
		type = Location
		hidden = true
		crashLocation = @/crashWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		crashBiome = @/crashLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		crashReasons = [ "their engine has taken on water" , "they had an engine fire" , "their rudder is disabled", "their ship was hit by a rogue wave in the recent storm", "that they were attacked by what they thought was a sea kracken" ]

	}
	
	DATA
	{
		type = String
		hidden = true
		crashReason = @/crashReasons.Random()
	}

	DATA
	{
		type = int
		hidden=true
		harbourSelected = Random(1, 15)
	}
	
//Passenger Data

//Passenger Data

	DATA
	{
		type = List<Kerbal>
		kerbalsInDistress = [NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen") ]
		hidden = true
		
	}

// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		genderType = Random(0,1)
	}
	
	DATA
    {
        type = bool
        isFemale = @/genderType == 1
    }
	
//Rank List
	DATA
	{
		type = List<string>
		
		ObsrankList = [ "Mid. " , "Ltjg. " , "Lt. ", "Lt Cdr. ", "Cdr. " ]
		
	} 

 //List of Navy Observer Team Members
	
	DATA
	{
		type = string
		
		ObserverRank = @/ObsrankList.Random()
		ObserverKerbal1 = @ObserverRank + RandomKerbalName(@/isFemale ? Female : Male)
		ObserverPronoun = @/isFemale ? "she" : "he"
		hidden = true
		
	}	
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsCGObserver = [ NewKerbal( @/isFemale ? Female : Male, @/ObserverKerbal1, "ServiceKerbal" ) ]
		
		hidden = true
		
	}
	
	DATA
	{
		// Select the originating port for the patrol
		type = int
		hidden=true
		harbourSelected = Random(2, 16)
	}

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine Crash zone
	BEHAVIOUR
	{
        name = CrashWaypointGenerator
        type = WaypointGenerator

		// Harbour that the mission will be based around
		WAYPOINT
		{
			name = @KSRTLA:HarbourName.ElementAt(@/harbourSelected)
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredTLA/Assets/Icons/port
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(@/harbourSelected)
			longitude = @KSRTLA:HarbourLON.ElementAt(@/harbourSelected)
		}
	    
		RANDOM_WAYPOINT_NEAR
		{
			name = Search Area offset
			hidden = true
			targetBody = Kerbin
			nearIndex = 0
			minDistance = 60000.0 
			maxDistance = 75000.0
			waterAllowed = true
			underwater = true
			altitude = -0.1		
		}

		// Place the visible waypoint randomy near the wreck betweeen 200-300 meters away
		// This will allow players to use Bon Voyage navigation without hace a crash with the wreck on the same coordinates
		RANDOM_WAYPOINT_NEAR
		{
			name = Search Area
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredTLA/Assets/Icons/ship
			waterAllowed = true
			underwater = true
			altitude = -0.1
			nearIndex = 1
			minDistance = 20 
			maxDistance = 40 		
		}
		
	}
//Set the missing plane at the Waypoint
	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			// Place wreck vessel on the at depth of 15 meter. -TranceaddicT
			name = @/wreck
			craftURL = "ContractPacks/KerbinSideRemasteredTLA/Assets/Ships/" + @/wreckCraft
			vesselType = Ship
			owned = false
			targetBody = Kerbin		
			lat = @/crashLocation.Latitude()
			lon = @/crashLocation.Longitude()
			alt = -10
			heading = 133.5
			pitch = 90
			roll = @/capsizeValue	
		}
	}
	// put some kerbals in the drink -TranceaddicT
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			alt = 0
			heading = Random(0,359)
			
		}

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			alt = 0
			heading = Random(0,359)
			
		}

		KERBAL
		{
			kerbal = @/kerbalsCGObserver.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @KSRTLA:ObsLAT.ElementAt(@/harbourSelected)
			lon = @KSRTLA:ObsLON.ElementAt(@/harbourSelected)
			heading = Random(0,359)
	
		}
		
	}


//Remove the missing plane when the contract completes
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = @/wreck
	}

//Remove the survivors when the contract completes
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalsInDistress.ElementAt(0)
		kerbal = @/kerbalsInDistress.ElementAt(1)
		kerbal = @/kerbalsCGObserver.ElementAt(0)
	}


// Mission Dialog boxes

	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = LaunchSite
			position = CENTER
			
			TEXT
			{
				text = Thanks for undertaking this mission. Now that you are all ship shape it is time to get underway to the Search Area to resuce the crew of the ship in distress. Good Hunting.    
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Flags/UNCoastGuard
				characterName = United Knations Coast Guard Operations
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RecoveryReady
			position = CENTER
			
			TEXT
			{
				text = This is outstanding work! You have the crew aboard safely. We are all very pleased with your efforts here. Now bring the crew back to port.   
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Flags/UNCoastGuard
				characterName = United Knations Coast Guard Operations
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = ReturnToPort
			
			position = CENTER
			
			TEXT
			{
				text = Huzzah! Well done you. When you've completed your report there's a bunch of us gathering at the officers' club and we'd love you to join us for some tall tales from your sea adventure.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Flags/UNCoastGuard
				characterName = United Knations Coast Guard Operations
			}
			
		}
		
		
// failed misssion dialog
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = Oh dear. That's didn't go very well at all did it? 
				fontSize = 20
				textColor = #B00B1E
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Flags/UNCoastGuard
				characterName = United Knations Coast Guard Operations
			}
		}
	}

//Craft definition
	PARAMETER
	{
		name = Initialization
		type = VesselParameterGroup
		title = Your vessel must meet all requirements
		define = @/craft
		completeInSequence = true
        dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			trait = Pilot
			minCrew = 1
			disableOnStateChange = false
			hideChildren = true
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = Have @/ObserverKerbal1 on board
			hideChildren = true
			kerbal = @/kerbalsCGObserver.ElementAt(0)
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have space for 4 crew or passengers
			minCapacity = 4
			disableOnStateChange = false
		}

		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 500
			hideOnCompletion = false
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = your vessel must be stopped on the surface
			situation = SPLASHED
			maxSpeed = 5
			minAltitude = -5
			disableOnStateChange = false
			hideChildren = true
			completeInSequence = true
		}
		
		PARAMETER
		{
			name = RequestTakeoffLaunch
			type = Duration
			
			duration = 10s
			preWaitText = request clearance to weigh anchor:
			waitingText = weighing anchor: 
			completionText = we are underway

			completeInSequence = true
			disableOnStateChange = true
		}
	}


// -----------------------------------------------------------------	
// RecoveryReady
// -----------------------------------------------------------------
	PARAMETER
	{
		name = RecoveryReady
		type = VesselParameterGroup
		vessel = @/craft
		title = Rescue the crew of the @/wreck
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = all survivors are on board
			hideChildren = true
			completeInSequence = true
			kerbal = @/kerbalsInDistress
		}
	}
// -----------------------------------------------------------------	
// Return to port
// -----------------------------------------------------------------
	PARAMETER
	{
		name = ReturnToPort
		type = VesselParameterGroup
		vessel = @/craft
		title = Return to port at @KSRTLA:HarbourName.ElementAt(@/harbourSelected)
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true	

		PARAMETER
		{
			name = All
			type = All
			title = return to @KSRTLA:HarbourName.ElementAt(@/harbourSelected)
			notes = Complete by navigating to within 500 meteres of the port marker
			completeInSequence = true
			disableOnStateChange = false

			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 0
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				completeInSequence = true
				hideChildren = true
			}
			PARAMETER
			{
				name = ReachState
				type = ReachState
				title = and stop your vessel on the surface
				situation = SPLASHED
				maxSpeed = 5
				minAltitude = -5
				disableOnStateChange = false
				hideChildren = true
				completeInSequence = true
			}
		}
	}

// -----------------------------------------------------------------
// Safety first
// -----------------------------------------------------------------
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		vessel = @/craft

	    PARAMETER
	    {
		    name = KerbalDeaths
		    type = KerbalDeaths
		    title = Without killing anyone 
		    vessel = @/craft
		    hideChildren = true
		    completeInSequence = true
	    }
    }
// -----------------------------------------------------------------
//Recovery Parameter - Recover Kerbals
// -----------------------------------------------------------------
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		title = and recover the survivors and the observer
		kerbal = @/kerbalsCGObserver.ElementAt(0)
		kerbal = @/kerbalsInDistress.ElementAt(0)
		kerbal = @/kerbalsInDistress.ElementAt(1)
		hideChildren = true
		completeInSequence = true
	}
}
